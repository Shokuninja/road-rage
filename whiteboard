import pygame
import random

pygame.init()

screen_width = 1000
screen_height = 1000

screen = pygame.display.set_mode((screen_width, screen_height))

background_photos = [
    pygame.image.load("src/P0OtED.png"),
]

current_photo_index = 0
background_img = background_photos[current_photo_index]
background_img = pygame.transform.scale(background_img, (screen_width, screen_height))

playerimg = pygame.image.load("src/cars/cars_race1.png")
playerimg = pygame.transform.scale(playerimg, (300, 300))
player = playerimg.get_rect(center=(300, 250))
player_speed = 5

# Step 1: Create bomb image
bomb_img = pygame.image.load("src/bomb.png")
bomb_img = pygame.transform.scale(bomb_img, (50, 50))

# Step 2: Set bomb properties
bombs = []
bomb_speed = 5
spawn_interval = 2000  # milliseconds
spawn_timer = 0
last_frame_time = pygame.time.get_ticks()

# Step 3: Spawn bombs at regular intervals
def spawn_bomb():
    x = random.randint(0, screen_width - bomb_img.get_width())
    y = 0
    bombs.append(pygame.Rect(x, y, bomb_img.get_width(), bomb_img.get_height()))

# Step 4: Move bombs down
def move_bombs():
    for bomb in bombs:
        bomb.y += bomb_speed

# Step 5: Check for collision
def check_collision():
    for bomb in bombs:
        if bomb.colliderect(player):
            bombs.remove(bomb)

run = True
while run:
    screen.blit(background_img, (0, 0))
    screen.blit(playerimg, player)

    key = pygame.key.get_pressed()
    if key[pygame.K_UP] == True:
        player.y -= player_speed
    elif key[pygame.K_DOWN] == True:
        player.y += player_speed
    if key[pygame.K_LEFT] == True:
        player.x -= player_speed
    elif key[pygame.K_RIGHT] == True:
        player.x += player_speed

    player.x = max(0, min(player.x, screen_width - player.width))
    player.y = max(0, min(player.y, screen_height - player.height))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    # Step 6: Spawn bombs at regular intervals
    spawn_timer += pygame.time.get_ticks() - last_frame_time
    last_frame_time = pygame.time.get_ticks()
    if spawn_timer >= spawn_interval:
        spawn_bomb()
        spawn_timer = 0

    # Step 7: Move bombs down
    move_bombs()

    for bomb in bombs:
        screen.blit(bomb_img, bomb)

    # Step 8: Check for collision
    check_collision()

    pygame.display.update()

pygame.quit()







second one 

import pygame
import random

pygame.init()

screen_width = 1000
screen_height = 1000

screen = pygame.display.set_mode((screen_width, screen_height))

background_photos = [
    pygame.image.load("src/P0OtED.png"),
]

current_photo_index = 0
background_img = background_photos[current_photo_index]
background_img = pygame.transform.scale(background_img, (screen_width, screen_height))

playerimg = pygame.image.load("src/cars/cars_race1.png")
playerimg = pygame.transform.scale(playerimg, (300, 300))
player = playerimg.get_rect(center=(300, 250))
player_speed = 5

# Step 1: Create bomb image
bomb_img = pygame.image.load("src/bomb.png")
bomb_img = pygame.transform.scale(bomb_img, (50, 50))

# Step 2: Set bomb properties
bombs = []
bomb_speed = 5
spawn_interval = 2000  # milliseconds
spawn_timer = 0
last_frame_time = pygame.time.get_ticks()

# Step 3: Spawn bombs at regular intervals
def spawn_bomb():
    x = random.randint(0, screen_width - bomb_img.get_width())
    y = 0
    bombs.append({"rect": pygame.Rect(x, y, bomb_img.get_width(), bomb_img.get_height()), "exploded": False})

# Step 4: Move bombs down
def move_bombs():
    for bomb in bombs:
        bomb["rect"].y += bomb_speed

# Step 5: Check for collision
def check_collision():
    for bomb in bombs:
        if bomb["rect"].colliderect(player):
            bomb["exploded"] = True

run = True
while run:
    screen.blit(background_img, (0, 0))
    screen.blit(playerimg, player)

    key = pygame.key.get_pressed()
    if key[pygame.K_UP] == True:
        player.y -= player_speed
    elif key[pygame.K_DOWN] == True:
        player.y += player_speed
    if key[pygame.K_LEFT] == True:
        player.x -= player_speed
    elif key[pygame.K_RIGHT] == True:
        player.x += player_speed

    player.x = max(0, min(player.x, screen_width - player.width))
    player.y = max(0, min(player.y, screen_height - player.height))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    # Step 6: Spawn bombs at regular intervals
    spawn_timer += pygame.time.get_ticks() - last_frame_time
    last_frame_time = pygame.time.get_ticks()
    if spawn_timer >= spawn_interval:
        spawn_bomb()
        spawn_timer = 0

    # Step 7: Move bombs down
    move_bombs()

    for bomb in bombs:
        if bomb["exploded"]:
            # Handle explosion here (e.g., play explosion sound, show explosion animation, etc.)
            continue
        screen.blit(bomb_img, bomb["rect"])

    # Step 8: Check for collision
    check_collision()

    pygame.display.update()



pygame.quit()



import pygame
import time
import random
 
pygame.init()
 
display_width = 800
display_height = 600
 
black = (0,0,0)
white = (255,255,255)

red = (200,0,0)
green = (0,200,0)

bright_red = (255,0,0)
bright_green = (0,255,0)
 
block_color = (53,115,255)
 
car_width = 73
 
gameDisplay = pygame.display.set_mode((display_width,display_height))
pygame.display.set_caption('SWIMMY')
clock = pygame.time.Clock()
 
carImg = pygame.image.load('racecar.png')


# pygame.display.set_icon(gameIcon)

pause = False
#crash = True
 
def enemys_dodged(count):
    font = pygame.font.SysFont("comicsansms", 25)
    text = font.render("Dodged: "+str(count), True, black)
    gameDisplay.blit(text,(0,0))
 
def enemys(enemyx, enemyy, enemyw, enemyh, color):
    pygame.draw.rect(gameDisplay, color, [enemyx, enemyy, enemyw, enemyh])
 
def car(x,y):
    gameDisplay.blit(carImg,(x,y))
 
def text_objects(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()
 
##def message_display(text):
##    largeText = pygame.font.SysFont("comicsansms",115)
##    TextSurf, TextRect = text_objects(text, largeText)
##    TextRect.center = ((display_width/2),(display_height/2))
##    gameDisplay.blit(TextSurf, TextRect)
## 
##    pygame.display.update()
## 
##    time.sleep(2)
## 
##    game_loop()
    
    
 
def crash():
    
    
    largeText = pygame.font.SysFont("comicsansms",115)
    TextSurf, TextRect = text_objects("YOU MACKED", largeText)
    TextRect.center = ((display_width/2),(display_height/2))
    gameDisplay.blit(TextSurf, TextRect)
    

    while True:
        for event in pygame.event.get():
            #print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
                
        #gameDisplay.fill(white)
        

        button("Play Again",150,450,100,50,green,bright_green,game_loop)
        button("Quit",550,450,100,50,red,bright_red,quitgame)

        pygame.display.update()
        clock.tick(15) 

def button(msg,x,y,w,h,ic,ac,action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    #print(click)
    if x+w > mouse[0] > x and y+h > mouse[1] > y:
        pygame.draw.rect(gameDisplay, ac,(x,y,w,h))
        if click[0] == 1 and action != None:
            action()         
    else:
        pygame.draw.rect(gameDisplay, ic,(x,y,w,h))
    smallText = pygame.font.SysFont("comicsansms",20)
    textSurf, textRect = text_objects(msg, smallText)
    textRect.center = ( (x+(w/2)), (y+(h/2)) )
    gameDisplay.blit(textSurf, textRect)
    

def quitgame():
    pygame.quit()
    quit()

def unpause():
    global pause
    pause = False
    

def paused():

    largeText = pygame.font.SysFont("comicsansms",115)
    TextSurf, TextRect = text_objects("Paused", largeText)
    TextRect.center = ((display_width/2),(display_height/2))
    gameDisplay.blit(TextSurf, TextRect)
    

    while pause:
        for event in pygame.event.get():
            #print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
                
        #gameDisplay.fill(white)
        

        button("Continue",150,450,100,50,green,bright_green,unpause)
        button("Quit",550,450,100,50,red,bright_red,quitgame)

        pygame.display.update()
        clock.tick(15)   


def game_intro():

    intro = True

    while intro:
        for event in pygame.event.get():
            #print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
                
        gameDisplay.fill(white)
        largeText = pygame.font.SysFont("comicsansms",115)
        TextSurf, TextRect = text_objects("SWIMMY", largeText)
        TextRect.center = ((display_width/2),(display_height/2))
        gameDisplay.blit(TextSurf, TextRect)

        button("GO!",150,450,100,50,green,bright_green,game_loop)
        button("Quit",550,450,100,50,red,bright_red,quitgame)

        pygame.display.update()
        clock.tick(15)
        
        
    
    

    
def game_loop():
    global pause

    x = (display_width * 0.45)
    y = (display_height * 0.8)
 
    x_change = 0
 
    enemy_startx = random.randrange(0, display_width)
    enemy_starty = -600
    enemy_speed = 4
    enemy_width = 100
    enemy_height = 100
 
    enemyCount = 1
 
    dodged = 0
 
    gameExit = False
 
    while not gameExit:
 
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
 
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x_change = -5
                if event.key == pygame.K_RIGHT:
                    x_change = 5
                if event.key == pygame.K_p:
                    pause = True
                    paused()
                    
 
            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    x_change = 0
 
        x += x_change
        gameDisplay.fill(white)
 
        # enemys(enemyx, enemyy, enemyw, enemyh, color)
        enemys(enemy_startx, enemy_starty, enemy_width, enemy_height, block_color)
 
 
        
        enemy_starty += enemy_speed
        car(x,y)
        enemys_dodged(dodged)
 
        if x > display_width - car_width or x < 0:
            crash()
 
        if enemy_starty > display_height:
            enemy_starty = 0 - enemy_height
            enemy_startx = random.randrange(0,display_width)
            dodged += 1
            enemy_speed += 1
            enemy_width += (dodged * 1.2)
 
        if y < enemy_starty+enemy_height:
            print('y crossover')
 
            if x > enemy_startx and x < enemy_startx + enemy_width or x+car_width > enemy_startx and x + car_width < enemy_startx+enemy_width:
                print('x crossover')
                crash()
        
        pygame.display.update()
        clock.tick(60)

game_intro()
game_loop()
pygame.quit()
quit()




import pygame
import time
import random

pygame.init()

display_width = 800
display_height = 600

gameDisplay = pygame.display.set_mode((display_width, display_height))
clock = pygame.time.Clock()

car_width = 73

background_photos = [
    pygame.image.load("18.png"),
]

current_photo_index = 0
background_img = background_photos[current_photo_index]
background_img = pygame.transform.scale(background_img, (display_width, display_height))

playerimg = pygame.image.load("cars_race1.png")
playerimg = pygame.transform.scale(playerimg, (300, 300))
# player = playerimg.get_rect(center=(500, 500))



white = (255, 255, 255)
black = (0, 0, 0)
red = (200, 0, 0)
green = (0, 200, 0)
bright_red = (255, 0, 0)
bright_green = (0, 255, 0)

pause = False

def enemys_dodged(count):
    font = pygame.font.SysFont("comicsansms", 25)
    text = font.render("Dodged: " + str(count), True, black)
    gameDisplay.blit(text, (0, 0))

def enemys(enemyx, enemyy, enemyw, enemyh, color):
    pygame.draw.rect(gameDisplay, color, [enemyx, enemyy, enemyw, enemyh])

def car(x, y):
    gameDisplay.blit(playerimg, (x, y))

def text_objects(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()

def crash():
    largeText = pygame.font.SysFont("comicsansms", 115)
    TextSurf, TextRect = text_objects("YOU MACKED", largeText)
    TextRect.center = ((display_width / 2), (display_height / 2))
    gameDisplay.blit(TextSurf, TextRect)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Play Again", 150, 450, 100, 50, green, bright_green, game_loop)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def button(msg, x, y, w, h, ic, ac, action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    if x + w > mouse[0] > x and y + h > mouse[1] > y:
        pygame.draw.rect(gameDisplay, ac, (x, y, w, h))
        if click[0] == 1 and action is not None:
            action()
    else:
        pygame.draw.rect(gameDisplay, ic, (x, y, w, h))
    smallText = pygame.font.SysFont("comicsansms", 20)
    textSurf, textRect = text_objects(msg, smallText)
    textRect.center = ((x + (w / 2)), (y + (h / 2)))
    gameDisplay.blit(textSurf, textRect)

def quitgame():
    pygame.quit()
    quit()

def unpause():
    global pause
    pause = False

def paused():
    largeText = pygame.font.SysFont("comicsansms", 115)
    TextSurf, TextRect = text_objects("Paused", largeText)
    TextRect.center = ((display_width / 2), (display_height / 2))
    gameDisplay.blit(TextSurf, TextRect)

    while pause:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Continue", 150, 450, 100, 50, green, bright_green, unpause)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def game_intro():
    intro = True

    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        gameDisplay.blit(background_img, (0, 0))  # Display the background image

        largeText = pygame.font.SysFont("comicsansms", 115)
        TextSurf, TextRect = text_objects("SWIMMY", largeText)
        TextRect.center = ((display_width / 2), (display_height / 2))
        gameDisplay.blit(TextSurf, TextRect)

        button("GO!", 150, 450, 100, 50, green, bright_green, game_loop)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def game_loop():
    global pause

    x = (display_width * 0.45)
    y = (display_height * 0.6)

    x_change = 0

    enemy_startx = random.randrange(0, display_width)
    enemy_starty = -600
    enemy_speed = 4
    enemy_width = 100
    enemy_height = 100

    dodged = 0

    gameExit = False

    while not gameExit:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x_change = -5
                if event.key == pygame.K_RIGHT:
                    x_change = 5
                if event.key == pygame.K_p:
                    pause = True
                    paused()

            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    x_change = 0

        x += x_change
        gameDisplay.blit(background_img, (0, 0))  # Display the background image

        enemys(enemy_startx, enemy_starty, enemy_width, enemy_height, red)

        enemy_starty += enemy_speed
        car(x, y)
        enemys_dodged(dodged)

        if x > display_width - car_width or x < 0:
            crash()

        if enemy_starty > display_height:
            enemy_starty = 0 - enemy_height
            enemy_startx = random.randrange(0, display_width)
            dodged += 1
            enemy_speed += 1
            enemy_width += (dodged * 1.2)

        if y < enemy_starty + enemy_height:
            print('y crossover')

            if x > enemy_startx and x < enemy_startx + enemy_width or x + car_width > enemy_startx and x + car_width < enemy_startx + enemy_width:
                print('x crossover')
                crash()

        pygame.display.update()
        clock.tick(60)

game_intro()
game_loop()
pygame.quit()
quit()






last update 

import pygame
import time
import random

pygame.init()

display_width = 800
display_height = 600

gameDisplay = pygame.display.set_mode((display_width, display_height))
clock = pygame.time.Clock()

car_width = 73

background_photos = [
    pygame.image.load("18.png"),
]

current_photo_index = 0
background_img = background_photos[current_photo_index]
background_img = pygame.transform.scale(background_img, (display_width, display_height))

playerimg = pygame.image.load("cars_race1.png")
playerimg = pygame.transform.scale(playerimg, (300, 300))
# player = playerimg.get_rect(center=(500, 500))



white = (255, 255, 255)
black = (0, 0, 0)
red = (200, 0, 0)
green = (0, 200, 0)
bright_red = (255, 0, 0)
bright_green = (0, 255, 0)

pause = False

def enemys_dodged(count):
    font = pygame.font.SysFont("comicsansms", 25)
    text = font.render("Dodged: " + str(count), True, black)
    gameDisplay.blit(text, (0, 0))

def enemys(enemyx, enemyy, enemyw, enemyh, color):
    pygame.draw.rect(gameDisplay, color, [enemyx, enemyy, enemyw, enemyh])

def car(x, y):
    gameDisplay.blit(playerimg, (x, y))

def text_objects(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()

def crash():
    largeText = pygame.font.SysFont("comicsansms", 115)
    TextSurf, TextRect = text_objects("YOU MACKED", largeText)
    TextRect.center = ((display_width / 2), (display_height / 2))
    gameDisplay.blit(TextSurf, TextRect)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Play Again", 150, 450, 100, 50, green, bright_green, game_loop)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def button(msg, x, y, w, h, ic, ac, action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    if x + w > mouse[0] > x and y + h > mouse[1] > y:
        pygame.draw.rect(gameDisplay, ac, (x, y, w, h))
        if click[0] == 1 and action is not None:
            action()
    else:
        pygame.draw.rect(gameDisplay, ic, (x, y, w, h))
    smallText = pygame.font.SysFont("comicsansms", 20)
    textSurf, textRect = text_objects(msg, smallText)
    textRect.center = ((x + (w / 2)), (y + (h / 2)))
    gameDisplay.blit(textSurf, textRect)

def quitgame():
    pygame.quit()
    quit()

def unpause():
    global pause
    pause = False

def paused():
    largeText = pygame.font.SysFont("comicsansms", 115)
    TextSurf, TextRect = text_objects("Paused", largeText)
    TextRect.center = ((display_width / 2), (display_height / 2))
    gameDisplay.blit(TextSurf, TextRect)

    while pause:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Continue", 150, 450, 100, 50, green, bright_green, unpause)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def game_intro():
    intro = True

    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        gameDisplay.blit(background_img, (0, 0))  # Display the background image

        largeText = pygame.font.SysFont("comicsansms", 115)
        TextSurf, TextRect = text_objects("SWIMMY", largeText)
        TextRect.center = ((display_width / 2), (display_height / 2))
        gameDisplay.blit(TextSurf, TextRect)

        button("GO!", 150, 450, 100, 50, green, bright_green, game_loop)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def game_loop():
    global pause

    x = (display_width * 0.45)
    y = (display_height * 0.6)

    x_change = 0

    enemy_startx = random.randrange(0, display_width)
    enemy_starty = -600
    enemy_speed = 4
    enemy_width = 100
    enemy_height = 100

    dodged = 0

    gameExit = False

    while not gameExit:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x_change = -5
                if event.key == pygame.K_RIGHT:
                    x_change = 5
                if event.key == pygame.K_p:
                    pause = True
                    paused()

            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    x_change = 0

        x += x_change
        gameDisplay.blit(background_img, (0, 0))  # Display the background image

        enemys(enemy_startx, enemy_starty, enemy_width, enemy_height, red)

        enemy_starty += enemy_speed
        car(x, y)
        enemys_dodged(dodged)

        if x > display_width - car_width or x < 0:
            crash()

        if enemy_starty > display_height:
            enemy_starty = 0 - enemy_height
            enemy_startx = random.randrange(0, display_width)
            dodged += 1
            enemy_speed += 1
            enemy_width += (dodged * 1.2)

        if y < enemy_starty + enemy_height:
            print('y crossover')

            if x > enemy_startx and x < enemy_startx + enemy_width or x + car_width > enemy_startx and x + car_width < enemy_startx + enemy_width:
                print('x crossover')
                crash()

        pygame.display.update()
        clock.tick(60)

game_intro()
game_loop()
pygame.quit()
quit()



import pygame
import time
import random

pygame.init()

display_width = 800
display_height = 600

gameDisplay = pygame.display.set_mode((display_width, display_height))
clock = pygame.time.Clock()

car_width = 73

background_photos = [
    pygame.image.load("src/background/18.png"),
]

current_photo_index = 0
background_img = background_photos[current_photo_index]
background_img = pygame.transform.scale(background_img, (display_width, display_height))

playerimg = pygame.image.load("src/cars/8.png")
playerimg = pygame.transform.scale(playerimg, (300, 300))
# player = playerimg.get_rect(center=(500, 500))



white = (255, 255, 255)
black = (0, 0, 0)
red = (200, 0, 0)
green = (0, 200, 0)
bright_red = (255, 0, 0)
bright_green = (0, 255, 0)

pause = False

def enemys_dodged(count):
    font = pygame.font.SysFont("comicsansms", 25)
    text = font.render("Dodged: " + str(count), True, black)
    gameDisplay.blit(text, (0, 0))

def enemys(enemyx, enemyy, enemyw, enemyh, color):
    pygame.draw.rect(gameDisplay, color, [enemyx, enemyy, enemyw, enemyh])

def car(x, y):
    gameDisplay.blit(playerimg, (x, y))

def text_objects(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()

def crash():
    largeText = pygame.font.SysFont("comicsansms", 115)
    TextSurf, TextRect = text_objects("YOU MACKED", largeText)
    TextRect.center = ((display_width / 2), (display_height / 2))
    gameDisplay.blit(TextSurf, TextRect)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Play Again", 150, 450, 100, 50, green, bright_green, game_loop)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def button(msg, x, y, w, h, ic, ac, action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    if x + w > mouse[0] > x and y + h > mouse[1] > y:
        pygame.draw.rect(gameDisplay, ac, (x, y, w, h))
        if click[0] == 1 and action is not None:
            action()
    else:
        pygame.draw.rect(gameDisplay, ic, (x, y, w, h))
    smallText = pygame.font.SysFont("comicsansms", 20)
    textSurf, textRect = text_objects(msg, smallText)
    textRect.center = ((x + (w / 2)), (y + (h / 2)))
    gameDisplay.blit(textSurf, textRect)

def quitgame():
    pygame.quit()
    quit()

def unpause():
    global pause
    pause = False

def paused():
    largeText = pygame.font.SysFont("comicsansms", 115)
    TextSurf, TextRect = text_objects("Paused", largeText)
    TextRect.center = ((display_width / 2), (display_height / 2))
    gameDisplay.blit(TextSurf, TextRect)

    while pause:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        button("Continue", 150, 450, 100, 50, green, bright_green, unpause)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def game_intro():
    intro = True

    while intro:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        gameDisplay.blit(background_img, (0, 0))  # Display the background image

        largeText = pygame.font.SysFont("comicsansms", 115)
        TextSurf, TextRect = text_objects("SWIMMY", largeText)
        TextRect.center = ((display_width / 2), (display_height / 2))
        gameDisplay.blit(TextSurf, TextRect)

        button("GO!", 150, 450, 100, 50, green, bright_green, game_loop)
        button("Quit", 550, 450, 100, 50, red, bright_red, quitgame)

        pygame.display.update()
        clock.tick(15)

def game_loop():
    global pause

    x = (display_width * 0.45)
    y = (display_height * 0.6)

    x_change = 0

    enemy_startx = random.randrange(0, display_width)
    enemy_starty = -600
    enemy_speed = 4
    enemy_width = 100
    enemy_height = 100

    dodged = 0

    gameExit = False

    while not gameExit:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT or event.key == pygame.K_a:
                    x_change = -5
                if event.key == pygame.K_RIGHT or event.key == pygame.K_d:
                    x_change = 5
                if event.key == pygame.K_p:
                    pause = True
                    paused()
                if event.key == pygame.K_w:
                    # Do something when the 'w' key is pressed
                    if event.key == pygame.K_s:     
                    # Do something when the 's' key is pressed
                     if event.type == pygame.KEYUP:
                         if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT or event.key == pygame.K_a or event.key == pygame.K_d:
                            x_change = 0
                    if event.key == pygame.K_w or event.key == pygame.K_s:
                            y_change = 0

        x += x_change
        gameDisplay.blit(background_img, (0, 0))  # Display the background image

        enemys(enemy_startx, enemy_starty, enemy_width, enemy_height, red)

        enemy_starty += enemy_speed
        car(x, y)
        enemys_dodged(dodged)

        if x > display_width - car_width or x < 0:
            crash()

        if enemy_starty > display_height:
            enemy_starty = 0 - enemy_height
            enemy_startx = random.randrange(0, display_width)
            dodged += 1
            enemy_speed += 1
            enemy_width += (dodged * 1.2)

        if y < enemy_starty + enemy_height:
            print('y crossover')

            if x > enemy_startx and x < enemy_startx + enemy_width or x + car_width > enemy_startx and x + car_width < enemy_startx + enemy_width:
                print('x crossover')
                crash()

        pygame.display.update()
        clock.tick(60)

game_intro()
game_loop()
pygame.quit()
quit()